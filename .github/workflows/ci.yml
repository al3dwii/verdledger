name: ci

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test-build-scan:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: supabase/postgres:15.1.0.29
        ports: ['54322:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:                    # so Vitest can hit the local PG—even if tests just stub it
      SUPABASE_URL:        http://localhost:54322
      SUPABASE_SERVICE_ROLE: ignore
      SUPABASE_ANON:        ignore

    steps:
      # ────────────── checkout & tool-chains ──────────────
      - uses: actions/checkout@v4

      - name: ☑️  Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: ☑️  Set up PNPM + Node
        uses: pnpm/action-setup@v2
        with: { version: 10 }
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      # ────────────── install deps ──────────────
      - run: pnpm install --frozen-lockfile

      # ────────────── build Go CLI ──────────────
      - name: 🔨 Build VerdLedger CLI (Go)
        run: |
          cd go
          go mod tidy               # make Go modules deterministic
          go build -o ../go/bin/verdledger ./cmd/verdledger
          cd ..

      # ────────────── build every workspace pkg ───────────
      - name: 🔨 Build TypeScript packages (Turbo)
        run: pnpm turbo run build

      - name: Build marketing site
        run: |
          cd site && pnpm i && pnpm build
          cd ..

      # ────────────── unit & golden tests ──────────────
      - name: ✅  Run Vitest suite
        run: pnpm test

      - name: Playwright tests
        run: |
          cd site && pnpm start &
          cd ..
          pnpm exec playwright test

      - name: Lighthouse check
        run: pnpm run test:lighthouse

      # ────────────── security scanning ────────────────
      - name: 🔍 Trivy FS scan
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: fs
          severity: CRITICAL,HIGH
          exit-code: 1            # fail the job on any HIGH/CRITICAL vulns

      # ────────────── SBOM (SPDX) ────────────────
      - name: 📦  Generate SPDX SBOM
        uses: anchore/sbom-action@v0.15.5
        with:
          format: spdx-json
          upload-artifact: false  # omit if you want it attached to the run
