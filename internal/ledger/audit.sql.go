// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: audit.sql

package ledger

import (
	"context"
	"database/sql"
)

const insertAuditFile = `-- name: InsertAuditFile :one
INSERT INTO public.audit_file (request_id, file_type, s3_url, size_bytes)
VALUES ($1, $2, $3, $4)
RETURNING id, request_id, file_type, s3_url, size_bytes, created_at
`

type InsertAuditFileParams struct {
	RequestID sql.NullInt64  `json:"request_id"`
	FileType  sql.NullString `json:"file_type"`
	S3Url     sql.NullString `json:"s3_url"`
	SizeBytes sql.NullInt64  `json:"size_bytes"`
}

func (q *Queries) InsertAuditFile(ctx context.Context, arg InsertAuditFileParams) (AuditFile, error) {
	row := q.db.QueryRowContext(ctx, insertAuditFile,
		arg.RequestID,
		arg.FileType,
		arg.S3Url,
		arg.SizeBytes,
	)
	var i AuditFile
	err := row.Scan(
		&i.ID,
		&i.RequestID,
		&i.FileType,
		&i.S3Url,
		&i.SizeBytes,
		&i.CreatedAt,
	)
	return i, err
}

const insertAuditRequest = `-- name: InsertAuditRequest :one
INSERT INTO public.audit_request (org_id, period_start, period_end, status)
VALUES ($1, $2, $3, $4)
RETURNING id, org_id, period_start, period_end, status, created_at
`

type InsertAuditRequestParams struct {
	OrgID       sql.NullInt64  `json:"org_id"`
	PeriodStart sql.NullTime   `json:"period_start"`
	PeriodEnd   sql.NullTime   `json:"period_end"`
	Status      sql.NullString `json:"status"`
}

func (q *Queries) InsertAuditRequest(ctx context.Context, arg InsertAuditRequestParams) (AuditRequest, error) {
	row := q.db.QueryRowContext(ctx, insertAuditRequest,
		arg.OrgID,
		arg.PeriodStart,
		arg.PeriodEnd,
		arg.Status,
	)
	var i AuditRequest
	err := row.Scan(
		&i.ID,
		&i.OrgID,
		&i.PeriodStart,
		&i.PeriodEnd,
		&i.Status,
		&i.CreatedAt,
	)
	return i, err
}
