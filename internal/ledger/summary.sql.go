// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: summary.sql

package ledger

import (
	"context"
)

const orgSummary = `-- name: OrgSummary :one
SELECT ledger_summary FROM public.ledger_summary($1, NULL)
`

func (q *Queries) OrgSummary(ctx context.Context, pOrg int64) (interface{}, error) {
	row := q.db.QueryRowContext(ctx, orgSummary, pOrg)
	var ledger_summary interface{}
	err := row.Scan(&ledger_summary)
	return ledger_summary, err
}

const projectSummary = `-- name: ProjectSummary :one
SELECT ledger_summary FROM public.ledger_summary($1, $2)
`

type ProjectSummaryParams struct {
	POrg     int64 `json:"p_org"`
	PProject int64 `json:"p_project"`
}

func (q *Queries) ProjectSummary(ctx context.Context, arg ProjectSummaryParams) (interface{}, error) {
	row := q.db.QueryRowContext(ctx, projectSummary, arg.POrg, arg.PProject)
	var ledger_summary interface{}
	err := row.Scan(&ledger_summary)
	return ledger_summary, err
}
