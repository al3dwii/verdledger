// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: optimizer.sql

package ledger

import (
	"context"
	"database/sql"

	"github.com/sqlc-dev/pqtype"
)

const insertOptimizerJob = `-- name: InsertOptimizerJob :one
INSERT INTO public.optimizer_job (org_id, project_id, cloud, resources)
VALUES ($1,$2,$3,$4)
RETURNING id, org_id, project_id, cloud, resources, created_at, status
`

type InsertOptimizerJobParams struct {
	OrgID     sql.NullInt64         `json:"org_id"`
	ProjectID sql.NullInt64         `json:"project_id"`
	Cloud     sql.NullString        `json:"cloud"`
	Resources pqtype.NullRawMessage `json:"resources"`
}

func (q *Queries) InsertOptimizerJob(ctx context.Context, arg InsertOptimizerJobParams) (OptimizerJob, error) {
	row := q.db.QueryRowContext(ctx, insertOptimizerJob,
		arg.OrgID,
		arg.ProjectID,
		arg.Cloud,
		arg.Resources,
	)
	var i OptimizerJob
	err := row.Scan(
		&i.ID,
		&i.OrgID,
		&i.ProjectID,
		&i.Cloud,
		&i.Resources,
		&i.CreatedAt,
		&i.Status,
	)
	return i, err
}

const insertOptimizerRun = `-- name: InsertOptimizerRun :one
INSERT INTO public.optimizer_run (job_id, scheduled_ts, from_region, to_region, kg_delta, usd_delta, recommended)
VALUES ($1,$2,$3,$4,$5,$6,$7)
RETURNING id, job_id, scheduled_ts, from_region, to_region, kg_delta, usd_delta, recommended, created_at
`

type InsertOptimizerRunParams struct {
	JobID       sql.NullInt64  `json:"job_id"`
	ScheduledTs sql.NullTime   `json:"scheduled_ts"`
	FromRegion  sql.NullString `json:"from_region"`
	ToRegion    sql.NullString `json:"to_region"`
	KgDelta     sql.NullString `json:"kg_delta"`
	UsdDelta    sql.NullString `json:"usd_delta"`
	Recommended sql.NullBool   `json:"recommended"`
}

func (q *Queries) InsertOptimizerRun(ctx context.Context, arg InsertOptimizerRunParams) (OptimizerRun, error) {
	row := q.db.QueryRowContext(ctx, insertOptimizerRun,
		arg.JobID,
		arg.ScheduledTs,
		arg.FromRegion,
		arg.ToRegion,
		arg.KgDelta,
		arg.UsdDelta,
		arg.Recommended,
	)
	var i OptimizerRun
	err := row.Scan(
		&i.ID,
		&i.JobID,
		&i.ScheduledTs,
		&i.FromRegion,
		&i.ToRegion,
		&i.KgDelta,
		&i.UsdDelta,
		&i.Recommended,
		&i.CreatedAt,
	)
	return i, err
}
